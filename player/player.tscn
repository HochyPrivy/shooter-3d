[gd_scene load_steps=8 format=2]

[ext_resource path="res://player/parent_follows.tscn" type="PackedScene" id=2]
[ext_resource path="res://player/weapons/kriss/hands.tscn" type="PackedScene" id=3]
[ext_resource path="res://ui/—Årosshair.tscn" type="PackedScene" id=4]
[ext_resource path="res://player/weapon_raycast.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody

export var speed = 7
export var ACCEL_DEFAULT = 7
export var ACCEL_AIR = 1
onready var accel = ACCEL_DEFAULT
var gravity = 9.8
export var jump = 5

var LADDER_SPEED = 3
var LADDER_ACCEL = 0.1

export var cam_accel = 40
export var mouse_sense = 0.1
var snap

var direction = Vector3()
var velocity = Vector3()
var gravity_vec = Vector3()
var movement = Vector3()

onready var head = $Head

onready var camera = $Camera

var is_mouse_visible = false

var is_on_ladder = false

func _ready():
	#hides the cursor
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	$Camera.set_meta(\"player\", self)

	Game.connect(\"ladder_entered\", self, \"on_ladder_entered\")
	Game.connect(\"ladder_exited\", self, \"on_ladder_exited\")

func on_ladder_entered():
	is_on_ladder = true
	print(\"ladder entered\")
	
func on_ladder_exited():
	is_on_ladder = false
	print(\"ladder exited\")

func _input(event):
	if Input.is_action_just_pressed(\"ui_cancel\"):
		match Input.get_mouse_mode():
			Input.MOUSE_MODE_VISIBLE:
				Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
				is_mouse_visible = false
			Input.MOUSE_MODE_CAPTURED:
				Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
				is_mouse_visible = true

	#get mouse input for head rotation
	if event is InputEventMouseMotion:
		if is_mouse_visible: return
		rotate_y(deg2rad(-event.relative.x * mouse_sense))
		head.rotate_x(deg2rad(-event.relative.y * mouse_sense))
		head.rotation.x = clamp(head.rotation.x, deg2rad(-89), deg2rad(89))

		
func _physics_process(delta):
	
	if is_on_ladder:
		move_on_ladder()
	else:
		direction = Vector3.ZERO
		var h_rot = global_transform.basis.get_euler().y
		var f_input = Input.get_action_strength(\"move_backward\") - Input.get_action_strength(\"move_forward\")
		var h_input = Input.get_action_strength(\"move_right\") - Input.get_action_strength(\"move_left\")
		direction = Vector3(h_input, 0, f_input).rotated(Vector3.UP, h_rot).normalized()
		
		#jumping and gravity
		if is_on_floor():
			snap = -get_floor_normal()
			accel = ACCEL_DEFAULT
			gravity_vec = Vector3.ZERO
		else:
			snap = Vector3.DOWN
			accel = ACCEL_AIR
			gravity_vec += Vector3.DOWN * gravity * delta
			
		if Input.is_action_just_pressed(\"jump\") and is_on_floor():
			snap = Vector3.ZERO
			gravity_vec = Vector3.UP * jump
		
		#make it move
		velocity = velocity.linear_interpolate(direction * speed, accel * delta)
		movement = velocity + gravity_vec
		
		move_and_slide_with_snap(movement, snap, Vector3.UP)
	
	


func move_on_ladder():


	var up = Input.is_action_pressed(\"move_forward\")
	var down = Input.is_action_pressed(\"move_backward\")
	var left = Input.is_action_pressed(\"move_left\")
	var right = Input.is_action_pressed(\"move_right\")

	var aim = camera.get_camera_transform().basis

	direction = Vector3()

	if up:
		direction -= aim[2]
	if down:
		direction += aim[2]
	if left:
		direction -= aim[0]
	if right:
		direction += aim[0]

	direction = direction.normalized()

	var target = direction * LADDER_SPEED

	velocity = velocity.linear_interpolate(target, LADDER_ACCEL)

	move_and_slide(velocity)
"

[sub_resource type="CapsuleShape" id=1]
radius = 0.5
height = 1.4

[sub_resource type="CapsuleMesh" id=2]
radius = 0.5
mid_height = 1.5

[node name="Player" type="KinematicBody" groups=["player"]]
script = SubResource( 3 )
speed = 5
ACCEL_DEFAULT = 15
jump = 4
mouse_sense = 0.2

[node name="Head" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.6, 0 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
visible = false
mesh = SubResource( 2 )
material/0 = null

[node name="GunPivot" type="Spatial" parent="."]

[node name="ParentFollowNode" parent="GunPivot" instance=ExtResource( 2 )]
target_path = NodePath("../..")
follow_speed = 14.0

[node name="HandsAndVectorD" parent="GunPivot" instance=ExtResource( 3 )]
transform = Transform( -0.00988689, 0.000283268, -0.00147282, 0.000145742, 0.009955, 0.0009363, 0.00149272, 0.000904244, -0.00984653, -0.003198, -1.52383, -0.303437 )

[node name="Camera" type="Camera" parent="."]
current = true

[node name="RayCast" parent="Camera" instance=ExtResource( 5 )]

[node name="ParentFollowNode" parent="Camera" instance=ExtResource( 2 )]
target_path = NodePath("../..")
follow_speed = 15.0

[node name="Crosshair" parent="." instance=ExtResource( 4 )]
